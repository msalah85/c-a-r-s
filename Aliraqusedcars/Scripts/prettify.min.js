!function(){var n=null;window.PR_SHOULD_USE_CONTINUATION=!0,function(){function d(n){function f(n){var i=n.charCodeAt(0),t;return i!==92?i:(t=n.charAt(1),(i=a[t])?i:"0"<=t&&t<="7"?parseInt(n.substring(1),8):t==="u"||t==="x"?parseInt(n.substring(2),16):n.charCodeAt(1))}function r(n){return n<32?(n<16?"\\x0":"\\x")+n.toString(16):(n=String.fromCharCode(n),n==="\\"||n==="-"||n==="]"||n==="^"?"\\"+n:n)}function h(n){var u=n.substring(1,n.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),n=[],i=u[0]==="^",s=["["],e,t,o;for(i&&s.push("^"),i=i?1:0,e=u.length;i<e;++i)t=u[i],/\\[bdsw]/i.test(t)?s.push(t):(t=f(t),i+2<e&&"-"===u[i+1]?(o=f(u[i+2]),i+=2):o=t,n.push([t,o]),o<65||t>122||(o<65||t>90||n.push([Math.max(65,t)|32,Math.min(o,90)|32]),o<97||t>122||n.push([Math.max(97,t)&-33,Math.min(o,122)&-33])));for(n.sort(function(n,t){return n[0]-t[0]||t[1]-n[1]}),u=[],e=[],i=0;i<n.length;++i)t=n[i],t[0]<=e[1]+1?e[1]=Math.max(e[1],t[1]):u.push(e=t);for(i=0;i<u.length;++i)t=u[i],s.push(r(t[0])),t[1]>t[0]&&(t[1]+1>t[0]&&s.push("-"),s.push(r(t[1])));return s.push("]"),s.join("")}function c(n){for(var i,u=n.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),s=u.length,f=[],t=0,o=0;t<s;++t)i=u[t],i==="("?++o:"\\"===i.charAt(0)&&(i=+i.substring(1))&&(i<=o?f[i]=-1:u[t]=r(i));for(t=1;t<f.length;++t)-1===f[t]&&(f[t]=++l);for(o=t=0;t<s;++t)i=u[t],i==="("?(++o,f[o]||(u[t]="(?:")):"\\"===i.charAt(0)&&(i=+i.substring(1))&&i<=o&&(u[t]="\\"+f[i]);for(t=0;t<s;++t)"^"===u[t]&&"^"!==u[t+1]&&(u[t]="");if(n.ignoreCase&&e)for(t=0;t<s;++t)i=u[t],n=i.charAt(0),i.length>=2&&n==="["?u[t]=h(i):n!=="\\"&&(u[t]=i.replace(/[A-Za-z]/g,function(n){return n=n.charCodeAt(0),"["+String.fromCharCode(n&-33,n|32)+"]"}));return u.join("")}for(var t,l=0,e=!1,u=!1,i=0,o=n.length;i<o;++i)if(t=n[i],t.ignoreCase)u=!0;else if(/[a-z]/i.test(t.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){e=!0;u=!1;break}for(var a={b:8,t:9,n:10,v:11,f:12,r:13},s=[],i=0,o=n.length;i<o;++i){if(t=n[i],t.global||t.multiline)throw Error(""+t);s.push("(?:"+c(t)+")")}return RegExp(s.join("|"),u?"gi":"g")}function g(n,t){function e(n){var s=n.nodeType;if(s==1){if(!o.test(n.className)){for(s=n.firstChild;s;s=s.nextSibling)e(s);s=n.nodeName.toLowerCase();("br"===s||"li"===s)&&(u[i]="\n",r[i<<1]=f++,r[i++<<1|1]=n)}}else(s==3||s==4)&&(s=n.nodeValue,s.length&&(s=t?s.replace(/\r\n?/g,"\n"):s.replace(/[\t\n\r ]+/g," "),u[i]=s,r[i<<1]=f,f+=s.length,r[i++<<1|1]=n))}var o=/(?:^|\s)nocode(?:\s|$)/,u=[],f=0,r=[],i=0;return e(n),{a:u.join("").replace(/\n$/,""),d:r}}function s(n,t,i,r){t&&(n={a:t,e:n},i(n),r.push.apply(r,n.g))}function nt(n){for(var r,t=void 0,i=n.firstChild;i;i=i.nextSibling)r=i.nodeType,t=r===1?t?n:i:r===3?it.test(i.nodeValue)?n:t:t;if(t!==n)return t}function u(t,i){function r(n){for(var h,p,w,v=n.e,y=[v,"pln"],k=0,d=n.a.match(f)||[],g={},b=0,nt=d.length;b<nt;++b){var l=d[b],o=g[l],a=void 0,t;if(typeof o=="string")t=!1;else{if(h=u[l.charAt(0)],h)a=l.match(h[1]),o=h[0];else{for(t=0;t<e;++t)if(h=i[t],a=l.match(h[1])){o=h[0];break}a||(o="pln")}!(t=o.length>=5&&"lang-"===o.substring(0,5))||a&&typeof a[1]=="string"||(t=!1,o="src");t||(g[l]=o)}h=k;k+=l.length;t?(t=a[1],p=l.indexOf(t),w=p+t.length,a[2]&&(w=l.length-a[2].length,p=w-t.length),o=o.substring(5),s(v+h,l.substring(0,p),r,y),s(v+h+p,t,c(o,t),y),s(v+h+w,l.substring(w),r,y)):y.push(v+h,o)}n.g=y}var u={},f,e;return function(){for(var r,e,h,c=t.concat(i),o=[],l={},s=0,a=c.length;s<a;++s){if(r=c[s],e=r[3],e)for(h=e.length;--h>=0;)u[e.charAt(h)]=r;r=r[1];e=""+r;l.hasOwnProperty(e)||(o.push(r),l[e]=n)}o.push(/[\S\s]/);f=d(o)}(),e=i.length,r}function i(t){var f=[],r=[],i,e;return t.tripleQuotedStrings?f.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,n,"'\""]):t.multiLineStrings?f.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,n,"'\"`"]):f.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,n,"\"'"]),t.verbatimStrings&&r.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,n]),i=t.hashComments,i&&(t.cStyleComments?(i>1?f.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,n,"#"]):f.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,n,"#"]),r.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,n])):f.push(["com",/^#[^\n\r]*/,n,"#"])),t.cStyleComments&&(r.push(["com",/^\/\/[^\n\r]*/,n]),r.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,n])),(i=t.regexLiterals)&&(e=(i=i>1?"":"\n\r")?".":"[\\S\\s]",r.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?=[^/*"+i+"])(?:[^/\\x5B\\x5C"+i+"]|\\x5C"+e+"|\\x5B(?:[^\\x5C\\x5D"+i+"]|\\x5C"+e+")*(?:\\x5D|$))+/")+")")])),(i=t.types)&&r.push(["typ",i]),i=(""+t.keywords).replace(/^ | $/g,""),i.length&&r.push(["kwd",RegExp("^(?:"+i.replace(/[\s,]+/g,"|")+")\\b"),n]),f.push(["pln",/^\s+/,n," \r\n\t "]),i="^.[^\\s\\w.$@'\"`/\\\\]*",t.regexLiterals&&(i+="(?!s*/)"),r.push(["lit",/^@[$_a-z][\w$@]*/i,n],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,n],["pln",/^[$_a-z][\w$@]*/i,n],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,n,"0123456789"],["pln",/^\\[\S\s]?/,n],["pun",RegExp(i),n]),u(f,r)}function h(n,t,i){function s(n){var t=n.nodeType,r,u;if(t!=1||c.test(n.className))(t==3||t==4)&&i&&(r=n.nodeValue,u=r.match(l),u&&(t=r.substring(0,u.index),n.nodeValue=t,(r=r.substring(u.index+u[0].length))&&n.parentNode.insertBefore(e.createTextNode(r),n.nextSibling),h(n),t||n.parentNode.removeChild(n)));else if("br"===n.nodeName)h(n),n.parentNode&&n.parentNode.removeChild(n);else for(n=n.firstChild;n;n=n.nextSibling)s(n)}function h(n){function i(n,t){var e=t?n.cloneNode(!1):n,r=n.parentNode,f,u;if(r)for(r=i(r,1),f=n.nextSibling,r.appendChild(e),u=f;u;u=f)f=u.nextSibling,r.appendChild(u);return e}for(;!n.nextSibling;)if(n=n.parentNode,!n)return;for(var n=i(n.nextSibling,0),t;(t=n.parentNode)&&t.nodeType===1;)n=t;f.push(n)}for(var f,r,o,c=/(?:^|\s)nocode(?:\s|$)/,l=/\r\n?|\n/,e=n.ownerDocument,u=e.createElement("li");n.firstChild;)u.appendChild(n.firstChild);for(f=[u],r=0;r<f.length;++r)s(f[r]);t===(t|0)&&f[0].setAttribute("value",t);o=e.createElement("ol");o.className="linenums";for(var t=Math.max(0,t-1|0)||0,r=0,a=f.length;r<a;++r)u=f[r],u.className="L"+(r+t)%10,u.firstChild||u.appendChild(e.createTextNode(" ")),o.appendChild(u);n.appendChild(o)}function t(n,t){for(var i,r=t.length;--r>=0;)i=t[r],o.hasOwnProperty(i)?f.console&&console.warn("cannot override language handler %s",i):o[i]=n}function c(n,t){return n&&o.hasOwnProperty(n)||(n=/^\s*</.test(t)?"default-markup":"default-code"),o[n]}function l(n){var rt=n.h,r,u,e,i,h,ft,nt,a,tt;try{r=g(n.c,n.i);u=r.a;n.a=u;n.d=r.d;n.e=0;c(rt,u)(n);var w=/\bMSIE\s(\d+)/.exec(navigator.userAgent),w=w&&+w[1]<=8,rt=/\n/g,b=n.a,k=b.length,r=0,v=n.d,ot=v.length,u=0,t=n.g,l=t.length,d=0;for(t[l]=k,i=e=0;i<l;)t[i]!==t[i+2]?(t[e++]=t[i++],t[e++]=t[i++]):i+=2;for(l=e,i=e=0;i<l;){for(var st=t[i],ut=t[i+1],s=i+2;s+2<=l&&t[s+1]===ut;)s+=2;t[e++]=st;t[e++]=ut;i=s}t.length=e;h=n.c;h&&(ft=h.style.display,h.style.display="none");try{for(;u<ot;){var y=v[u+2]||k,et=t[d+2]||k,s=Math.min(y,et),o=v[u+1],p;o.nodeType!==1&&(p=b.substring(r,s))&&(w&&(p=p.replace(rt,"\r")),o.nodeValue=p,nt=o.ownerDocument,a=nt.createElement("span"),a.className=t[d+1],tt=o.parentNode,tt.replaceChild(a,o),a.appendChild(o),r<y&&(v[u+1]=o=nt.createTextNode(b.substring(s,y)),tt.insertBefore(o,a.nextSibling)));r=s;r>=y&&(u+=2);r>=et&&(d+=2)}}finally{h&&(h.style.display=ft)}}catch(it){f.console&&console.log(it&&it.stack||it)}}var f=window,r=["break,continue,do,else,for,if,return,while"],e=[[r,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],a=[e,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],v=[e,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],y=[v,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],e=[e,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],p=[r,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],w=[r,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],tt=[r,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],r=[r,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],b=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,it=/\S/,rt=i({keywords:[a,y,e,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",p,w,r],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),o={},k;t(rt,["default-code"]);t(u([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);t(u([["pln",/^\s+/,n," \t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,n,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]);t(u([],[["atv",/^[\S\s]+/]]),["uq.val"]);t(i({keywords:a,hashComments:!0,cStyleComments:!0,types:b}),["c","cc","cpp","cxx","cyc","m"]);t(i({keywords:"null,true,false"}),["json"]);t(i({keywords:y,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:b}),["cs"]);t(i({keywords:v,cStyleComments:!0}),["java"]);t(i({keywords:r,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]);t(i({keywords:p,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]);t(i({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]);t(i({keywords:w,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]);t(i({keywords:e,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]);t(i({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);t(i({keywords:tt,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]);t(u([],[["str",/^[\S\s]+/]]),["regex"]);k=f.PR={createSimpleLexer:u,registerLangHandler:t,sourceDecorator:i,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:f.prettyPrintOne=function(n,t,i){var r=document.createElement("div");return r.innerHTML="<pre>"+n+"<\/pre>",r=r.firstChild,i&&h(r,i,!0),l({h:t,j:i,c:r,i:1}),r.innerHTML},prettyPrint:f.prettyPrint=function(t,i){function a(){for(var i,r,ut,ft=f.PR_SHOULD_USE_CONTINUATION?u.now()+250:Infinity;c<e.length&&u.now()<ft;c++){for(var s=e[c],rt=b,v=s;v=v.previousSibling;){if(r=v.nodeType,i=(r===7||r===8)&&v.nodeValue,i?!/^\??prettify\b/.test(i):r!==3||/\S/.test(v.nodeValue))break;if(i){rt={};i.replace(/\b(\w+)=([\w%+\-.:]+)/g,function(n,t,i){rt[t]=i});break}}if(v=s.className,(rt!==b||w.test(v))&&!d.test(v)){for(r=!1,i=s.parentNode;i;i=i.parentNode)if(it.test(i.tagName)&&i.className&&w.test(i.className)){r=!0;break}if(!r){if(s.className+=" prettyprinted",r=rt.lang,r||(r=v.match(p),!r&&(ut=nt(s))&&tt.test(ut.tagName)&&(r=ut.className.match(p)),r&&(r=r[1])),g.test(s.tagName))i=1;else var i=s.currentStyle,o=k.defaultView,i=(i=i?i.whiteSpace:o&&o.getComputedStyle?o.getComputedStyle(s,n).getPropertyValue("white-space"):0)&&"pre"===i.substring(0,3);o=rt.linenums;(o=o==="true"||+o)||(o=(o=v.match(/\blinenums\b(?::(\d+))?/))?o[1]&&o[1].length?+o[1]:!0:!1);o&&h(s,o,i);y={h:r,c:s,j:o,i:i};l(y)}}}c<e.length?setTimeout(a,250):"function"==typeof t&&t()}for(var s,v,u,r=i||document.body,k=r.ownerDocument||document,r=[r.getElementsByTagName("pre"),r.getElementsByTagName("code"),r.getElementsByTagName("xmp")],e=[],o=0;o<r.length;++o)for(s=0,v=r[o].length;s<v;++s)e.push(r[o][s]);r=n;u=Date;u.now||(u={now:function(){return+new Date}});var c=0,y,p=/\blang(?:uage)?-([\w.]+)(?!\S)/,w=/\bprettyprint\b/,d=/\bprettyprinted\b/,g=/pre|xmp/i,tt=/^code$/i,it=/^(?:pre|code|xmp)$/i,b={};a()}};typeof define=="function"&&define.amd&&define("google-code-prettify",[],function(){return k})}()}();
//# sourceMappingURL=prettify.min.js.map
